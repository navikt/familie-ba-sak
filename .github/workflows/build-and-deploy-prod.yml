name: Build-Deploy-Prod
on:
  push:
    branch:
      - 'master'
env:
  REF: ${{ github.ref }} # refs/tags/<tag>
  IMAGE_UTEN_TAG: docker.pkg.github.com/${{ github.repository }}/familie-ba-sak
jobs:
  deploy-to-prod:
    name: Bygg app/image, push til github, deploy til prod-fss og dev-fss
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Set TAG env
        run: echo ::set-env name=TAG::$(echo ${REF:10})
        # Nais-clusteret bruker IMAGE-variabelen videre.
      - name: Set IMAGE env
        run: echo ::set-env name=IMAGE::$(echo ${IMAGE_UTEN_TAG}:${TAG})
      - name: Read/save .m2 cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Sjekk at tag ligger p√• master
        run: |
          commit=$(git rev-parse --short HEAD)
          if ! [[ $(git branch -r --contains "$commit" | grep -E '(^|\s)origin/master$') ]]; then exit 1; fi
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Bygg med maven
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B --no-transfer-progress package --settings .m2/maven-settings.xml --file pom.xml
      - name: Bygg Docker image
        run: |
          docker build -t ${IMAGE} -t ${IMAGE_UTEN_TAG}:latest .
      - name: Login to Github Package Registry
        env:
          DOCKER_USERNAME: x-access-token
          DOCKER_PASSWORD: ${{ secrets.GITHUB_DOCKER_PUSH_PACKAGE_TOKEN }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin docker.pkg.github.com
      - name: Push Docker image med versjonstag
        run: docker push ${IMAGE}
      - name: Push Docker image med 'latest' tag
        run: docker push ${IMAGE_UTEN_TAG}:latest
      - name: Deploy til dev-fss
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.GITHUB_ACCESS_TOKEN }}
          CLUSTER: dev-fss
          RESOURCE: app-preprod.yaml
      - name: Deploy til prod-fss
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.GITHUB_ACCESS_TOKEN }}
          CLUSTER: prod-fss
          RESOURCE: app-prod.yaml