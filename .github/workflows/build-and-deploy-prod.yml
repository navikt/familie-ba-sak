name: Build-Deploy-Prod-GCP
on:
  push:
    branches:
      - 'master'

jobs:
  integrasjonstester:
    name: Kjører enhetstester og integrasjonstester
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'
      - name: Kjør integrasjonstester
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -B --no-transfer-progress package --settings .m2/maven-settings.xml --file pom.xml -Dtest="!no/nav/familie/ba/sak/kjerne/verdikjedetester/**"
  verdikjedetester:
    name: Kjører verdikjedetester
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'
      - name: Kjør verdikjedetester
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -B --no-transfer-progress package --settings .m2/maven-settings.xml --file pom.xml -Dtest="no/nav/familie/ba/sak/kjerne/verdikjedetester/**"
  bygg:
    name: Bygg app/image, push til github, deploy til preprod-gcp
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'
      - name: Bygg med maven
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -Dhttp.keepAlive=false -Dmaven.test.skip=true -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -B --no-transfer-progress package --settings .m2/maven-settings.xml --file pom.xml

      - uses: nais/docker-build-push@v0
        id: docker-push
        with:
          team: teamfamilie
          tag: latest
          push_image: true
          dockerfile: Dockerfile
          docker_context: .
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
      - name: Skriv ut docker-taggen
        run: echo 'Docker-tag er ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }} ' >> $GITHUB_STEP_SUMMARY
    outputs:
      image: ${{ steps.docker-push.outputs.image }}
  deploy-preprod:
    name: Deploy til dev-gcp
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    needs: [ bygg ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Deploy til dev-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.GITHUB_ACCESS_TOKEN }}
          CLUSTER: dev-gcp
          RESOURCE: .deploy/nais/app-preprod.yaml
          IMAGE: ${{ needs.bygg.outputs.image }}
  deploy-to-prod:
    name: Deploy til prod-gcp
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    needs: [ integrasjonstester,verdikjedetester,deploy-preprod ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Deploy til prod-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.GITHUB_ACCESS_TOKEN }}
          CLUSTER: prod-gcp
          RESOURCE: .deploy/nais/app-prod.yaml
          IMAGE: ${{ needs.bygg.outputs.image }}
