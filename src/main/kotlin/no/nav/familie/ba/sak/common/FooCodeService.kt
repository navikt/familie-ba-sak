package no.nav.familie.ba.sak.common

import org.springframework.stereotype.Service
import java.util.UUID
import kotlin.random.Random

/**
 * Service for generating various types of codes for demo purposes.
 * This is an example of autogenerated code that can be used for demonstrations.
 */
@Service
class FooCodeService {

    /**
     * Generates a random alphanumeric code with the specified prefix and length.
     * 
     * @param prefix The prefix to add to the beginning of the code
     * @param length The total length of the code (including prefix)
     * @return A random alphanumeric code
     */
    fun generateRandomCode(prefix: String = "DEMO", length: Int = 10): String {
        if (length <= prefix.length) {
            throw IllegalArgumentException("Total length must be greater than prefix length")
        }

        val randomPartLength = length - prefix.length
        val allowedChars = ('A'..'Z') + ('0'..'9')
        val randomPart = (1..randomPartLength)
            .map { allowedChars.random() }
            .joinToString("")

        return prefix + randomPart
    }

    /**
     * Generates a UUID-based code with an optional prefix.
     * 
     * @param prefix Optional prefix to add to the UUID
     * @return A UUID-based code
     */
    fun generateUuidCode(prefix: String = ""): String {
        return prefix + UUID.randomUUID().toString()
    }

    /**
     * Generates a numeric code of specified length.
     * 
     * @param length The length of the numeric code
     * @return A random numeric code
     */
    fun generateNumericCode(length: Int = 6): String {
        if (length <= 0) {
            throw IllegalArgumentException("Length must be positive")
        }

        val random = Random.Default
        return (1..length)
            .map { random.nextInt(10) }
            .joinToString("")
    }
}
